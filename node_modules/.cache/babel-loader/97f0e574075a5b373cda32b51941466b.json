{"ast":null,"code":"import { useMemo } from 'react';\nimport { useChainCalls } from './useChainCalls';\nimport { useChainId } from './useChainId';\n\nfunction warnOnInvalidContractCall(call) {\n  console.warn(`Invalid contract call: address=${call && call.address} method=${call && call.method} args=${call && call.args}`);\n}\n\nfunction encodeCallData(call, chainId) {\n  if (!call) {\n    return undefined;\n  }\n\n  if (!call.address || !call.method) {\n    warnOnInvalidContractCall(call);\n    return undefined;\n  }\n\n  try {\n    return {\n      address: call.address,\n      data: call.abi.encodeFunctionData(call.method, call.args),\n      chainId\n    };\n  } catch (_a) {\n    warnOnInvalidContractCall(call);\n    return undefined;\n  }\n}\n/**\n * @public\n * @deprecated Use {@link useCalls} instead.\n */\n\n\nexport function useContractCall(call) {\n  let queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return useContractCalls([call], queryParams)[0];\n}\n/**\n * @public\n * @deprecated Use {@link useCall} instead.\n */\n\nexport function useContractCalls(calls) {\n  let queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const chainId = useChainId({\n    queryParams\n  });\n  const rawCalls = useMemo(() => calls.map(call => chainId !== undefined ? encodeCallData(call, chainId) : undefined), [JSON.stringify(calls.map(call => {\n    var _a;\n\n    return call && {\n      address: (_a = call.address) === null || _a === void 0 ? void 0 : _a.toLowerCase(),\n      method: call.method,\n      args: call.args\n    };\n  })), chainId]);\n  const results = useChainCalls(rawCalls);\n  return useMemo(() => results.map((result, idx) => {\n    const call = calls[idx];\n\n    if (result === '0x') {\n      warnOnInvalidContractCall(call);\n      return undefined;\n    }\n\n    return call && result ? call.abi.decodeFunctionResult(call.method, result) : undefined;\n  }), [JSON.stringify(results)]);\n} //# sourceMappingURL=useContractCall.js.map","map":null,"metadata":{},"sourceType":"module"}