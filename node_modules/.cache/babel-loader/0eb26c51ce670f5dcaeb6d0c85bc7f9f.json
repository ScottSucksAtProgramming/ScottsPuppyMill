{"ast":null,"code":"import _defineProperty from \"/Users/scottkostolni/Documents/Projects/Programming Projects/React Projects/ScottsPuppyMill FrontEnd/ScottsPuppyMill/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/scottkostolni/Documents/Projects/Programming Projects/React Projects/ScottsPuppyMill FrontEnd/ScottsPuppyMill/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport function notificationReducer(state, action) {\n  var _a;\n\n  var chainId = action.chainId;\n  var chainState = (_a = state[chainId]) !== null && _a !== void 0 ? _a : [];\n\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return Object.assign(Object.assign({}, state), _defineProperty({}, chainId, [action.notification].concat(_toConsumableArray(chainState))));\n\n    case 'REMOVE_NOTIFICATION':\n      {\n        return Object.assign(Object.assign({}, state), _defineProperty({}, chainId, chainState.filter(function (notification) {\n          return notification.id !== action.notificationId;\n        })));\n      }\n  }\n}","map":{"version":3,"mappings":";;AAgBA,OAAM,SAAUA,mBAAV,CAA8BC,KAA9B,EAAoDC,MAApD,EAAkE;;;AACtE,MAAQC,OAAR,GAAoBD,MAApB,CAAQC,OAAR;AACA,MAAMC,UAAU,GAAG,WAAK,CAACD,OAAD,CAAL,MAAc,IAAd,IAAcE,aAAd,GAAcA,EAAd,GAAkB,EAArC;;AAEA,UAAQH,MAAM,CAACI,IAAf;AACE,SAAK,kBAAL;AACE,6CACKL,KADL,uBAEGE,OAFH,GAEcD,MAAM,CAACK,YAFrB,4BAEsCH,UAFtC;;AAIF,SAAK,qBAAL;AAA4B;AAC1B,+CACKH,KADL,uBAEGE,OAFH,EAEaC,UAAU,CAACI,MAAX,CAAkB,UAACD,YAAD;AAAA,iBAAkBA,YAAY,CAACE,EAAb,KAAoBP,MAAM,CAACQ,cAA7C;AAAA,SAAlB,CAFb;AAID;AAXH;AAaD","names":["notificationReducer","state","action","chainId","chainState","_a","type","notification","filter","id","notificationId"],"sources":["/Users/scottkostolni/Documents/Projects/Programming Projects/React Projects/ScottsPuppyMill FrontEnd/ScottsPuppyMill/node_modules/@usedapp/core/src/providers/notifications/reducer.ts"],"sourcesContent":["import { Notification, Notifications } from './model'\n\ninterface AddNotification {\n  type: 'ADD_NOTIFICATION'\n  chainId: number\n  notification: Notification\n}\n\ninterface RemoveNotification {\n  type: 'REMOVE_NOTIFICATION'\n  chainId: number\n  notificationId: string\n}\n\ntype Action = AddNotification | RemoveNotification\n\nexport function notificationReducer(state: Notifications, action: Action): Notifications {\n  const { chainId } = action\n  const chainState = state[chainId] ?? []\n\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        [chainId]: [action.notification, ...chainState],\n      }\n    case 'REMOVE_NOTIFICATION': {\n      return {\n        ...state,\n        [chainId]: chainState.filter((notification) => notification.id !== action.notificationId),\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}