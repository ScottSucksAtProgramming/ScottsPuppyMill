{"ast":null,"code":"import{Button,Chip}from\"@mui/material\";import{useEthers,useContractFunction}from\"@usedapp/core\";import{utils}from\"ethers\";import{Contract}from\"@ethersproject/contracts\";import ScottsPuppyMill from\"../chain-info/contracts/ScottsPuppyMill.json\";import{PuppyMillAddress}from\"../chain-info/deployments\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var MintShibaInu=function MintShibaInu(){var _useEthers=useEthers(),account=_useEthers.account;var isConnected=account!==undefined;var abi=ScottsPuppyMill.abi;var contractInterface=new utils.Interface(abi);var contractAddress=PuppyMillAddress;var contract=new Contract(contractAddress,contractInterface);var _useContractFunction=useContractFunction(contract,\"createShibaInu\",{transactionName:\"Adopt a Shiba Inu\"}),state=_useContractFunction.state,send=_useContractFunction.send;var status=state.status;var mintPuppy=function mintPuppy(){return void send();};return/*#__PURE__*/_jsxs(\"div\",{children:[isConnected?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:function onClick(){return mintPuppy();},children:\"Adopt a Shiba Inu\"}):undefined,/*#__PURE__*/_jsx(Chip,{size:\"small\",label:status,color:\"primary\"})]});};export var MintPug=function MintPug(){var _useEthers2=useEthers(),account=_useEthers2.account;var isConnected=account!==undefined;var abi=ScottsPuppyMill.abi;var contractInterface=new utils.Interface(abi);var contractAddress=PuppyMillAddress;var contract=new Contract(contractAddress,contractInterface);var _useContractFunction2=useContractFunction(contract,\"createPug\",{transactionName:\"Adopt a Pug\"}),state=_useContractFunction2.state,send=_useContractFunction2.send;var status=state.status;var mintPuppy=function mintPuppy(){return void send();};return/*#__PURE__*/_jsxs(\"div\",{children:[isConnected?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:function onClick(){return mintPuppy();},children:\"Adopt a Pug\"}):undefined,/*#__PURE__*/_jsx(Chip,{size:\"small\",label:status,color:\"primary\"})]});};export var MintStBernard=function MintStBernard(){var _useEthers3=useEthers(),account=_useEthers3.account;var isConnected=account!==undefined;var abi=ScottsPuppyMill.abi;var contractInterface=new utils.Interface(abi);var contractAddress=PuppyMillAddress;var contract=new Contract(contractAddress,contractInterface);var _useContractFunction3=useContractFunction(contract,\"createStBernard\",{transactionName:\"Adopt a St. Bernard\"}),state=_useContractFunction3.state,send=_useContractFunction3.send;var status=state.status;var mintPuppy=function mintPuppy(){return void send();};return/*#__PURE__*/_jsxs(\"div\",{children:[isConnected?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:function onClick(){return mintPuppy();},children:\"Adopt a St. Bernard\"}):undefined,/*#__PURE__*/_jsx(Chip,{size:\"small\",label:status,color:\"primary\"})]});};","map":{"version":3,"sources":["/Users/scottkostolni/Documents/Projects/Programming Projects/React Projects/ScottsPuppyMill/src/components/MintButtons.tsx"],"names":["Button","Chip","useEthers","useContractFunction","utils","Contract","ScottsPuppyMill","PuppyMillAddress","MintShibaInu","account","isConnected","undefined","abi","contractInterface","Interface","contractAddress","contract","transactionName","state","send","status","mintPuppy","MintPug","MintStBernard"],"mappings":"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","sourcesContent":["import { Button, Chip } from \"@mui/material\";\nimport { useEthers, useContractFunction } from \"@usedapp/core\";\nimport { utils } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport ScottsPuppyMill from \"../chain-info/contracts/ScottsPuppyMill.json\";\nimport { PuppyMillAddress } from \"../chain-info/deployments\";\n\nexport const MintShibaInu = () => {\n  const { account } = useEthers();\n  const isConnected = account !== undefined;\n  const { abi } = ScottsPuppyMill;\n  const contractInterface = new utils.Interface(abi);\n  const contractAddress = PuppyMillAddress;\n  const contract = new Contract(contractAddress, contractInterface);\n\n  const { state, send } = useContractFunction(contract, \"createShibaInu\", {\n    transactionName: \"Adopt a Shiba Inu\",\n  });\n  const { status } = state;\n\n  const mintPuppy = () => void send();\n\n  return (\n    <div>\n      {isConnected ? (\n        <Button variant=\"outlined\" onClick={() => mintPuppy()}>\n          Adopt a Shiba Inu\n        </Button>\n      ) : undefined}\n      <Chip size=\"small\" label={status} color=\"primary\" />\n    </div>\n  );\n};\n\nexport const MintPug = () => {\n  const { account } = useEthers();\n  const isConnected = account !== undefined;\n  const { abi } = ScottsPuppyMill;\n  const contractInterface = new utils.Interface(abi);\n  const contractAddress = PuppyMillAddress;\n  const contract = new Contract(contractAddress, contractInterface);\n\n  const { state, send } = useContractFunction(contract, \"createPug\", {\n    transactionName: \"Adopt a Pug\",\n  });\n  const { status } = state;\n\n  const mintPuppy = () => void send();\n\n  return (\n    <div>\n      {isConnected ? (\n        <Button variant=\"outlined\" onClick={() => mintPuppy()}>\n          Adopt a Pug\n        </Button>\n      ) : undefined}\n      <Chip size=\"small\" label={status} color=\"primary\" />\n    </div>\n  );\n};\n\nexport const MintStBernard = () => {\n  const { account } = useEthers();\n  const isConnected = account !== undefined;\n  const { abi } = ScottsPuppyMill;\n  const contractInterface = new utils.Interface(abi);\n  const contractAddress = PuppyMillAddress;\n  const contract = new Contract(contractAddress, contractInterface);\n\n  const { state, send } = useContractFunction(contract, \"createStBernard\", {\n    transactionName: \"Adopt a St. Bernard\",\n  });\n  const { status } = state;\n\n  const mintPuppy = () => void send();\n\n  return (\n    <div>\n      {isConnected ? (\n        <Button variant=\"outlined\" onClick={() => mintPuppy()}>\n          Adopt a St. Bernard\n        </Button>\n      ) : undefined}\n      <Chip size=\"small\" label={status} color=\"primary\" />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}