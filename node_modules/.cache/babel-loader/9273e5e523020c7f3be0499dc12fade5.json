{"ast":null,"code":"/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function callsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_CALLS') {\n    return [...state, ...action.calls.map(call => Object.assign(Object.assign({}, call), {\n      address: call.address.toLowerCase()\n    }))];\n  } else if (action.type === 'UPDATE_CALLS') {\n    return state.map(call => call.isStatic ? Object.assign(Object.assign({}, call), {\n      isDisabled: true\n    }) : call);\n  } else {\n    let finalState = state;\n\n    for (const call of action.calls) {\n      const index = finalState.findIndex(x => x.address.toLowerCase() === call.address.toLowerCase() && x.data === call.data);\n\n      if (index !== -1) {\n        finalState = finalState.filter((_, i) => i !== index);\n      }\n    }\n\n    return finalState;\n  }\n} //# sourceMappingURL=callsReducer.js.map","map":null,"metadata":{},"sourceType":"module"}