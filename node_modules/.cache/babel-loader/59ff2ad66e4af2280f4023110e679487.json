{"ast":null,"code":"import { useBlockNumber } from '../providers/blockNumber/blockNumber/context';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useEthers } from './useEthers';\nimport { useReadonlyNetworks } from '../providers/network/readonlyNetworks';\nimport { useBlockNumbers } from '../providers/blockNumber/blockNumbers';\n/**\n * @public\n */\n\nexport function useGasPrice() {\n  let queryParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    library\n  } = useEthers();\n  const providers = useReadonlyNetworks();\n\n  const _blockNumber = useBlockNumber();\n\n  const blockNumbers = useBlockNumbers();\n  const [gasPrice, setGasPrice] = useState();\n  const {\n    chainId\n  } = queryParams;\n  const [provider, blockNumber] = useMemo(() => chainId ? [providers[chainId], blockNumbers[chainId]] : [library, _blockNumber], [providers, library, blockNumbers, _blockNumber]);\n\n  async function updateGasPrice() {\n    setGasPrice(await (provider === null || provider === void 0 ? void 0 : provider.getGasPrice()));\n  }\n\n  useEffect(() => {\n    void updateGasPrice();\n  }, [provider, blockNumber]);\n  return gasPrice;\n} //# sourceMappingURL=useGasPrice.js.map","map":null,"metadata":{},"sourceType":"module"}