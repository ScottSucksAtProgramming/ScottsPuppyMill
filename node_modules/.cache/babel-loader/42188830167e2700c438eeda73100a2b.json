{"ast":null,"code":"import { createContext, useContext } from 'react';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { getChainById } from '../../helpers/chain';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport const ConfigContext = createContext({\n  config: DEFAULT_CONFIG,\n  updateConfig: () => undefined\n});\n\nconst validConfigs = configs => {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n\n  return configs;\n};\n/**\n * @public\n */\n\n\nexport function useConfig() {\n  var _a;\n\n  const {\n    config\n  } = useContext(ConfigContext); // backward compatible with supportedChains\n\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(chainId => getChainById(chainId));\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks\n    }));\n  }\n\n  return validConfigs(config);\n}\n/**\n * @public\n */\n\nexport function useUpdateConfig() {\n  const {\n    updateConfig\n  } = useContext(ConfigContext);\n  return updateConfig;\n} //# sourceMappingURL=context.js.map","map":null,"metadata":{},"sourceType":"module"}